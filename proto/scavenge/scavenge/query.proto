syntax = "proto3";

package scavenge.scavenge;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "scavenge/scavenge/params.proto";

option go_package = "scavenge/x/scavenge/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/scavenge/scavenge/params";
  
  }
  
  // Queries a list of ListQuestions items.
  rpc ListQuestions (QueryListQuestionsRequest) returns (QueryListQuestionsResponse) {
    option (google.api.http).get = "/scavenge/scavenge/list_questions";
  
  }
  
  // Queries a list of ShowQuestion items.
  rpc ShowQuestion (QueryShowQuestionRequest) returns (QueryShowQuestionResponse) {
    option (google.api.http).get = "/scavenge/scavenge/show_question/{questionId}";
  
  }
  
  // Queries a list of ListCommits items.
  rpc ListCommits (QueryListCommitsRequest) returns (QueryListCommitsResponse) {
    option (google.api.http).get = "/scavenge/scavenge/list_commits";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryListQuestionsRequest {}

message QueryListQuestionsResponse {}

message QueryShowQuestionRequest {
  uint64 questionId = 1;
}

message QueryShowQuestionResponse {}

message QueryListCommitsRequest {}

message QueryListCommitsResponse {}

